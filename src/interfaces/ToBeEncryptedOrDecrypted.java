package interfaces;

import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class ToBeEncryptedOrDecrypted extends javax.swing.JFrame
{

    private File[] listOfFilesAndFolders;
    private String encryptOrDecrypt;
    
    public ToBeEncryptedOrDecrypted(File[] listOfFilesAndFolders, String encryptOrDecrypt)
    {
        this.listOfFilesAndFolders = listOfFilesAndFolders;
        this.encryptOrDecrypt = encryptOrDecrypt;
     
        
        initComponents();
        setResizable(false);
        listOfFilesAndFoldersTextField.setEditable(false);
        
        if(encryptOrDecrypt.equalsIgnoreCase("encrypt"))
        {
           encryptOrDecryptButton.setText("ENCRYPT");
            heading.setText("List of files/folders to be encrypted:");
        }
        else if(encryptOrDecrypt.equalsIgnoreCase("decrypt"))
        {
            encryptOrDecryptButton.setText("DECRYPT");
            heading.setText("List of files/folders to be decrypted:");
        }
        setLocationRelativeTo(null);
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener( new WindowAdapter()
        {
            public void windowClosing(WindowEvent e)
            {
                JFrame frame = (JFrame)e.getSource();
                Toolkit.getDefaultToolkit().beep();
                int result = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit ?", "Exit Application", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION)
                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
        });
        
        displayListOfFiles();
        getRootPane().setDefaultButton(encryptOrDecryptButton);
        
    }
    
    private void displayListOfFiles()
    {
        for(Integer i=0, j=1; i < listOfFilesAndFolders.length; i++, j++)
        {
            listOfFilesAndFoldersTextField.append(j.toString()+". "+listOfFilesAndFolders[i].getName()+"\n");
            listOfFilesAndFoldersTextField.append(listOfFilesAndFolders[i].getAbsolutePath()+"\n\n");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        heading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfFilesAndFoldersTextField = new javax.swing.JTextArea();
        encryptOrDecryptButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        heading.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        heading.setText("List of files/folders to be encrypted:");

        listOfFilesAndFoldersTextField.setColumns(20);
        listOfFilesAndFoldersTextField.setRows(5);
        jScrollPane1.setViewportView(listOfFilesAndFoldersTextField);

        encryptOrDecryptButton.setFont(new java.awt.Font("AR JULIAN", 1, 24)); // NOI18N
        encryptOrDecryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptOrDecryptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 237, Short.MAX_VALUE)
                        .addComponent(encryptOrDecryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(281, 281, 281)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(heading)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(encryptOrDecryptButton)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptOrDecryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptOrDecryptButtonActionPerformed
        setVisible(false);
        dispose();
        if(encryptOrDecrypt.equalsIgnoreCase("encrypt"))
        {
            new EncPas(listOfFilesAndFolders).setVisible(true);
        }
        else if(encryptOrDecrypt.equalsIgnoreCase("decrypt"))
        {
            new DecPas(listOfFilesAndFolders).setVisible(true);
        }

    }//GEN-LAST:event_encryptOrDecryptButtonActionPerformed
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton encryptOrDecryptButton;
    private javax.swing.JLabel heading;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea listOfFilesAndFoldersTextField;
    // End of variables declaration//GEN-END:variables
}
